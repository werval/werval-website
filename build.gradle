
description = "QiWeb Website"

apply plugin: 'java'

repositories {
    maven { url qiwebLocalRepository }
    maven {
    	url "https://repo.codeartisans.org/qiweb"
    	credentials { username = "qiweb"; password = "qiweb" }
	}
}


//
//  ____                            _       _   _
// |    \ ___ ___ _ _ _____ ___ ___| |_ ___| |_|_|___ ___
// |  |  | . |  _| | |     | -_|   |  _| .'|  _| | . |   |
// |____/|___|___|___|_|_|_|___|_|_|_| |__,|_| |_|___|_|_|
//


// Develop
configurations { doc_develop_new { transitive = false } }
dependencies { doc_develop_new "org.qiweb:org.qiweb.dist:0:doc@zip" }
task extractDocDevelopNew(type: Copy) {
    inputs.file configurations.doc_develop_new
    from zipTree( configurations.doc_develop_new.fileCollection{ it.name == 'org.qiweb.dist' }.singleFile )
    into file('build/tmp/qiweb-doc/develop')
    includeEmptyDirs = false
}
// Current
configurations { doc_current_new { transitive = false } }
dependencies { doc_current_new "org.qiweb:org.qiweb.dist:0:doc@zip" }
task extractDocCurrentNew(type: Copy) {
    inputs.file configurations.doc_current_new
    from zipTree( configurations.doc_current_new.fileCollection{ it.name == 'org.qiweb.dist' }.singleFile )
    into file('build/tmp/qiweb-doc/current')
    includeEmptyDirs = false
}
// Previous releases
def versions = []
//def versions = [ '0.3.0.Alpha', '0.2.0.Alpha', '0.1.3.Alpha' ]
configurations { doc_versions_new { transitive = false } }
dependencies { versions.each { v -> doc_versions_new "org.qiweb:org.qiweb.dist:$v:doc@zip" } }
task extractDocVersionsNew {
    inputs.file configurations.doc_versions_new
    versions.each { v -> outputs.file "build/tmp/qiweb-doc/$v" }
    doLast {
        versions.each { v ->
            copy {
                from zipTree( configurations.doc_versions_new.fileCollection{ it.name == 'org.qiweb.dist' && it.version == v }.singleFile )
                into file( "build/tmp/qiweb-doc/$v" )
                includeEmptyDirs = false
            }
        }
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/melix/jbake-gradle-plugin' }
    }
    dependencies {
        classpath 'me.champeau.gradle:jbake-gradle-plugin:0.1'
        classpath 'org.asciidoctor:asciidoctor-java-integration:0.1.4'
        classpath 'org.freemarker:freemarker:2.3.19'
    }
}
task prepareJBakeInput {
    dependsOn extractDocDevelopNew, extractDocCurrentNew, extractDocVersionsNew
    inputs.dir file( 'src/jbake' )
    inputs.dir file( 'build/tmp/qiweb-doc' )
    outputs.dir file( 'build/tmp/jbake' )
    doLast {
        copy {
            from file( 'src/jbake' )
            into file( 'build/tmp/jbake' )
        }
        copy {
            from file( 'build/tmp/qiweb-doc' )
            into file( 'build/tmp/jbake/assets/doc' )
        }
    }
}
apply plugin: 'jbake'
jbake {
    dependsOn prepareJBakeInput
    input file( 'build/tmp/jbake' )
    configuration = [
        'qiweb.doc.versions': versions as List
    ]
}

task generateStaticWebsiteResources {
    dependsOn jbake
    inputs.dir jbake.output
    outputs.dir file('build/generated-src/website')
    doLast {
        copy {
            from jbake.output
            into file('build/generated-src/website/resources/website')
        }
    }
}
processResources.dependsOn generateStaticWebsiteResources
sourceSets.main.resources.srcDirs += file('build/generated-src/website/resources')


//
//  _____ _ _ _ _     _
// |     |_| | | |___| |_
// |  |  | | | | | -_| . |
// |__  _|_|_____|___|___|
//    |__|
//

buildscript {
    repositories {
        maven { url qiwebLocalRepository }
        maven {
            url "https://repo.codeartisans.org/qiweb"
            credentials { username = "qiweb"; password = "qiweb" }
        }
    }
    dependencies { classpath 'org.qiweb:org.qiweb.gradle:0' }
}

apply plugin:'qiweb'
devshell {
    extraWatch += file( 'src/jbake' )
}

dependencies {

    compile 'org.qiweb:org.qiweb.api:0'
    compile 'org.qiweb:org.qiweb.modules.jdbc:0'

    runtime 'org.qiweb:org.qiweb.server.bootstrap:0'
    runtime 'ch.qos.logback:logback-classic:1.1.2'
    
    testCompile 'org.qiweb:org.qiweb.test:0'

}


//
//  _____         _           _
// |  _  |___ ___| |_ ___ ___|_|___ ___
// |   __| .'|  _| '_| .'| . | |   | . |
// |__|  |__,|___|_,_|__,|_  |_|_|_|_  |
//                       |___|     |___|
//

apply plugin:'application'
applicationName = name
mainClassName = 'org.qiweb.server.bootstrap.Main'

